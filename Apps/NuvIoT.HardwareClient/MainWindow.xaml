<Window x:Class="NuvIoT.HardwareClient.MainWindow"       
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:NuvIoT.HardwareClient"
        mc:Ignorable="d"
        Title="MainWindow" Height="800" Width="1600">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="auto" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="auto" />
        </Grid.ColumnDefinitions>
        <StackPanel Orientation="Horizontal" Grid.ColumnSpan="3">
            <Label Content="Serial Ports"></Label>
            <ComboBox ItemsSource="{Binding PortNames}" Margin="4" Width="120" DisplayMemberPath="." SelectedValuePath="." SelectedItem="{Binding SelectedPortName}" />
            <Label Content="Baud Rates"></Label>
            <ComboBox ItemsSource="{Binding BaudRates}" Margin="4" Width="120" DisplayMemberPath="." SelectedValuePath="." SelectedItem="{Binding SelectedBaudRate}" />
            <Button Width="80" Margin="4" x:Name="btnOpen"  Click="btnOpen_Click" Content="Open" />
            <Button Width="80" Margin="4" x:Name="btnClose" Click="btnClose_Click" Content="Close" />
            <Button Width="80" Margin="4" x:Name="btnPauseResume" Click="btnPauseResume_Click"  Content="Pause" />
            <Button Width="80" Margin="4" x:Name="btnClear" Click="btnClear_Click"  Content="Clear" />
        </StackPanel>
        <ListBox Grid.Row="1" ItemsSource="{Binding ConsoleOutput}" x:Name="ConsoleOutputList" Background="Black">
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <TextBlock Text="{Binding .}" Foreground="Yellow" FontFamily="Consolas"/>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>
        <Button Content="Start Watcher" x:Name="btnBLEStartWatcher" Click="btnBLEStartWatcher_Click" Width="120" Grid.Column="1" Grid.Row="0" VerticalAlignment="Top" HorizontalAlignment="Right" Margin="0,0,160,0"/>
        <Button Content="Disconnect" x:Name="btnBLEDisconnect" Click="btnBLEDisconnect_Click" Width="80" Grid.Column="1" Grid.Row="0" VerticalAlignment="Top" HorizontalAlignment="Right" Margin="0,0,80,0"/>
        <Rectangle Width="80" Height="20" Grid.Column="1" Grid.Row="0" HorizontalAlignment="Right" VerticalAlignment="Top" Fill="Red" x:Name="rectBTConnected"/>

        <TabControl Grid.Column="1" Grid.Row="1">
            <TabItem Header="Console" >
                <ListBox ItemsSource="{Binding BLEOutput}"  x:Name="BLEOutputList" Background="Black" Margin="0,20,0,0">
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding .}" Foreground="Yellow" FontFamily="Consolas"/>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
            </TabItem>
            <TabItem Header="Configurations">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition></RowDefinition>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <StackPanel>
                        <Label>Command</Label>
                        <TextBox AcceptsReturn="false" Margin="2" Text="{Binding CommandText, Mode=TwoWay}" x:Name="txtIOConfigCommandType" KeyUp="txtIOConfigCommandType_KeyUp" />
                    </StackPanel>
                        <ListBox ItemsSource="{Binding ConfigResponses}" Grid.Column="1"  x:Name="ConfigOutputList" Background="Black" Margin="0,20,0,0">
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding .}" Foreground="Yellow" FontFamily="Consolas"/>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </Grid>
            </TabItem>
        </TabControl>
        <StackPanel Grid.Column="2" Grid.Row="1">
            <Button x:Name="btnSendRun" Content="Run" Width="80" Height="24" Margin="4" Click="btnSendRun_Click" />
            <Button x:Name="btnSendRestart" Content="Restart" Width="80" Height="24" Margin="4" Click="btnSendRestart_Click"/>
            <Button x:Name="btnSendPause" Content="Pause" Width="80" Height="24" Margin="4" Click="btnSendPause_Click"/>
            <Button x:Name="btnSendExit" Content="Exit" Width="80" Height="24" Margin="4" Click="btnSendExit_Click"/>
        </StackPanel>
        <Grid Grid.Row="2" Grid.ColumnSpan="3">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="auto" />
            </Grid.ColumnDefinitions>
            <TextBox AcceptsReturn="false" Margin="2" Text="{Binding CommandText, Mode=TwoWay}" x:Name="txtCommandText" KeyUp="txtCommandText_KeyDown"  />
            <StackPanel Grid.Column="1" Orientation="Horizontal" Margin="2" >
                <Button x:Name="Send" Content="Send" Width="80" Height="24" ></Button>
                <CheckBox x:Name="chkSendCR" Content="Send CR" VerticalAlignment="Center" Margin="10,0,10,0" IsChecked="{Binding SendCR}" />
                <CheckBox x:Name="chkSendLF" Content="Send LF" VerticalAlignment="Center" Margin="10,0,10,0" IsChecked="{Binding SendLF}" />
            </StackPanel>
        </Grid>
    </Grid>
</Window>
